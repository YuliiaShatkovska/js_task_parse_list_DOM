{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAY,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEtC,EAAkB,SAAC,CAAzB,EACE,OAAO,OAAO,EAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IACxD,GAyBA,AAvBA,SAAkB,CAAI,EACpB,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,EACG,IAAI,CACH,SAAC,CAAA,CAAO,CAFZ,EAGM,OAAA,EAAgB,EAAM,OAAO,CAAC,MAAM,EACpC,EAAgB,EAAM,OAAO,CAAC,MAAM,CAEvC,GAAA,OAAO,CAAC,SAAC,CAAT,EAAoB,OAAA,EAAa,WAAW,CAAC,E,EAClD,EAaS,GAVA,AAWI,EAXC,GAAG,CAAC,SAAC,CAAjB,EACE,MAAO,CACL,KAAM,EAAK,SAAS,CACpB,IAAK,CAAC,EAAK,OAAO,CAAC,GAAG,CACtB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,AAC7B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar items = _to_consumable_array(document.querySelectorAll(\"li\"));\nvar convertToNumber = function(str) {\n    return Number(str.split(\"$\").join(\"\").split(\",\").join(\"\"));\n};\nfunction sortList(list) {\n    var listOfPeople = document.querySelector(\"ul\");\n    list.sort(function(item1, item2) {\n        return convertToNumber(item2.dataset.salary) - convertToNumber(item1.dataset.salary);\n    }).forEach(function(person) {\n        return listOfPeople.appendChild(person);\n    });\n}\nfunction getEmployees(list) {\n    return list.map(function(item) {\n        return {\n            name: item.innerText,\n            age: +item.dataset.age,\n            position: item.dataset.position,\n            salary: item.dataset.salary\n        };\n    });\n}\nsortList(items);\ngetEmployees(items);\n\n//# sourceMappingURL=index.0c6c035f.js.map\n","'use strict';\n\nconst items = [...document.querySelectorAll('li')];\n\nconst convertToNumber = (str) => {\n  return Number(str.split('$').join('').split(',').join(''));\n};\n\nfunction sortList(list) {\n  const listOfPeople = document.querySelector('ul');\n\n  list\n    .sort(\n      (item1, item2) =>\n        convertToNumber(item2.dataset.salary) -\n        convertToNumber(item1.dataset.salary),\n    )\n    .forEach((person) => listOfPeople.appendChild(person));\n}\n\nfunction getEmployees(list) {\n  return list.map((item) => {\n    return {\n      name: item.innerText,\n      age: +item.dataset.age,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n    };\n  });\n}\n\nsortList(items);\ngetEmployees(items);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","items","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","convertToNumber","str","Number","split","join","sortList","list","listOfPeople","querySelector","sort","item1","item2","dataset","salary","forEach","person","appendChild","map","item","innerText","age","position"],"version":3,"file":"index.0c6c035f.js.map"}