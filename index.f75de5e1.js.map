{"mappings":"AAAA;AAEA,MAAM,QAAQ;OAAI,SAAS,gBAAgB,CAAC;CAAM;AAElD,MAAM,kBAAkB,CAAC;IACvB,OAAO,OAAO,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC;AACxD;AAEA,SAAS,SAAS,IAAI;IACpB,MAAM,eAAe,SAAS,aAAa,CAAC;IAE5C,KACG,IAAI,CACH,CAAC,OAAO,QACN,gBAAgB,MAAM,OAAO,CAAC,MAAM,IACpC,gBAAgB,MAAM,OAAO,CAAC,MAAM,GAEvC,OAAO,CAAC,CAAC,SAAW,aAAa,WAAW,CAAC;AAClD;AAEA,SAAS,aAAa,IAAI;IACxB,OAAO,KAAK,GAAG,CAAC,CAAC;QACf,OAAO;YACL,MAAM,KAAK,SAAS;YACpB,KAAK,CAAC,KAAK,OAAO,CAAC,GAAG;YACtB,UAAU,KAAK,OAAO,CAAC,QAAQ;YAC/B,QAAQ,KAAK,OAAO,CAAC,MAAM;QAC7B;IACF;AACF;AAEA,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst items = [...document.querySelectorAll('li')];\n\nconst convertToNumber = (str) => {\n  return Number(str.split('$').join('').split(',').join(''));\n};\n\nfunction sortList(list) {\n  const listOfPeople = document.querySelector('ul');\n\n  list\n    .sort(\n      (item1, item2) =>\n        convertToNumber(item2.dataset.salary) -\n        convertToNumber(item1.dataset.salary),\n    )\n    .forEach((person) => listOfPeople.appendChild(person));\n}\n\nfunction getEmployees(list) {\n  return list.map((item) => {\n    return {\n      name: item.innerText,\n      age: +item.dataset.age,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n    };\n  });\n}\n\nsortList(items);\ngetEmployees(items);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}